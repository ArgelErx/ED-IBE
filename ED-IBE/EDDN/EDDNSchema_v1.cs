// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace IBE.EDDN
{

    internal partial class EDDNSchema_v1
    {
        internal class Header_Class
        {

            [JsonProperty("softwareVersion")]
            public string SoftwareVersion { get; set; }

            [JsonProperty("gatewayTimestamp")]
            public string GatewayTimestamp { get; set; }

            [JsonProperty("softwareName")]
            public string SoftwareName { get; set; }

            [JsonProperty("uploaderID")]
            public string UploaderID { get; set; }
        }
    }

    internal partial class EDDNSchema_v1
    {
        internal class Message_Class
        {

            [JsonProperty("buyPrice")]
            public int BuyPrice { get; set; }

            [JsonProperty("timestamp")]
            public string Timestamp { get; set; }

            [JsonProperty("stationStock")]
            public int StationStock { get; set; }

            [JsonProperty("systemName")]
            public string SystemName { get; set; }

            [JsonProperty("stationName")]
            public string StationName { get; set; }

            [JsonProperty("demand")]
            public int Demand { get; set; }

            [JsonProperty("sellPrice")]
            public int SellPrice { get; set; }

            [JsonProperty("itemName")]
            public string ItemName { get; set; }
        }
    }

    internal partial class EDDNSchema_v1
    {

        [JsonProperty("header")]
        public Header_Class Header { get; set; }

        [JsonProperty("$schemaRef")]
        public string SchemaRef { get; set; }

        [JsonProperty("message")]
        public Message_Class Message { get; set; }

        /// <summary>
        /// changes data to a RN-importable string
        /// </summary>
        /// <returns></returns>
        internal String getEDDNCSVImportString()
        {

            //System;Location;Commodity_Class;Sell;Buy;Demand;;Supply;;Date;
            string csvFormatted = this.Message.SystemName + ";" +
                                  this.Message.StationName + ";" +
                                  this.Message.ItemName + ";" +
                                  (this.Message.SellPrice == 0 ? "" : this.Message.SellPrice.ToString()) + ";" +
                                  (this.Message.BuyPrice == 0 ? "" : this.Message.BuyPrice.ToString()) + ";" +
                                  this.Message.Demand.ToString() + ";" +
                                  ";" +
                                  this.Message.StationStock.ToString() + ";" +
                                  ";" +
                                  this.Message.Timestamp.ToString() + ";"
                                  +
                                  "EDDN" + ";";

            return csvFormatted;
        }

        /// <summary>
        /// returns, if this is a main message or only a message from the test schema
        /// </summary>
        /// <returns></returns>
        public Boolean isTest()
        { 
            return SchemaRef.EndsWith("/test");
        }
    }
}
